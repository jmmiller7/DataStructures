package Assignment1Package;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Assignment1Class {

	static List<String> sortList = new ArrayList<String>();

	public static void main(String[] args) {

		String word = ""; // used in method1 to get a word to scramble
		String text = ""; // used in method2 to get a list of words

		int numChars = 0;

		System.out.println("* * * Welcome to Assignment 1! * * *\n");

		// -------------------------------------------------------------

		System.out.println("- - - Method 1: scrambleWord - - -");

		word = "TAN";

		System.out.println("\nBefore Scrambling: \"" + word + "\"");

		word = scrambleWord(word);

		System.out.println("After Scrambling:  \"" + word + "\"");

		// -------------------------------------------------------------

		System.out.println("\n- - - Method 2: scrambleOrRemove - - -");

		// take String text and split into wordList
		text = "TAN, ABRACADABRA, WHOA, APPLE, EGGS";
		String[] wordArray = text.split("[ .,?!]+");
		List<String> wordList = Arrays.asList(wordArray);

		System.out.println("\nList before scrambleOrRemove: " + wordList);
		
		scrambleOrRemove(wordList);
		
		System.out.println("List after scrambleOrRemove:  " + sortList);

		// -------------------------------------------------------------

		System.out.println("\n- - - Method 3: getNumCharacters - - -");

		numChars = getNumCharacters(wordList);

		System.out.println("There are  " + numChars + " characters  in the list " + text);

		// -------------------------------------------------------------
		System.out.println("\n- - - Method 4: scrambleAndDisplay - - -");

		text = "JAKE,TOM,MATTHEW,AUSTIN,MASON";
		scrambleAndDisplay(text);

		// -------------------------------------------------------------

		System.out.println("\n* * * Thank you for using Assignment 1! * * *");
	}

	public static String scrambleWord(String word) {
		String helper = "";

		// check if word has contents
		if (helper.equals(word))
			return helper;

		// length of word, used as bound in following for loop
		int length = word.length();

		// make sure word is uppercase
		word = word.toUpperCase();

		// scramble word
		for (int position = 0; position < length - 1; position++) {
			char origLtr = word.charAt(position);

			// more than one letter left
			if (position < length - 1) {
				// swap A or a
				if (origLtr == 'A') {
					char swapLtr = word.charAt(position + 1);

					helper += swapLtr;
					helper += origLtr;

					// letters were swapped, skip next letter
					if (position <= length - 2)
						position++;

				} else
					helper += origLtr;
			}
			// last letter
			else
				helper += origLtr;
		}

		return helper;
	}

	public static void scrambleOrRemove(List<String> wordList) {

		String convWord = "";
		List<String> helper = new ArrayList<String>();

		

		// process wordList
		for (int currWord = 0; currWord < wordList.size(); currWord++) {
			convWord = convWord.toUpperCase();
			convWord = scrambleWord(wordList.get(currWord));
			helper.add(convWord);
		}

		// remove unchanged words
		for (int currWord = 0; currWord < wordList.size(); currWord++) {
			if (!wordList.get(currWord).equals(helper.get(currWord)))
				sortList.add(helper.get(currWord));
		}

		
	}

	public static int getNumCharacters(List<String> wordList) {
		int numChars = 0;

		for (int currWord = 0; currWord < wordList.size(); currWord++) {
			numChars += (wordList.get(currWord)).length();
		}

		return numChars;
	}

	public static void scrambleAndDisplay(String text) {
		int numChars = 0;
		String[] wordArray = text.split("[ .,?!]+");
		List<String> wordList = Arrays.asList(wordArray);

		sortList.clear();

		scrambleOrRemove(wordList);
		numChars = getNumCharacters(sortList);

		System.out.println("The sorted list has   " + numChars + " characters");
	}

}
