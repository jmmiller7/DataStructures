import java.util.*;

public class LinkedList<T> {
	Node head;
	int numItems = 0;

	public LinkedList() {
		head = null;
		numItems = 0;
	}

	public void add(T data) {
		Node newNode = new Node(data, head);
		head = newNode;
		numItems++;
	}

	// add item to end of list
	public void addLast(T item) {
		Node cursor = head;

		Node newNode = new Node(item, null);
		numItems++;

		if (head == null) {
			head = newNode;
			return;
		}

		while ((cursor.link != null)) {
			cursor = cursor.link;
		}

		cursor.link = newNode;
	}

	// remove second item from list
	public void removeSecond(int numItems) {
		if (numItems < 2)
			return;

		head.link = head.link.link;
	}

	// retrieve every other item
	// ======================================================
	public List<T> retrieveEveryOtherItem() {
		List<T> list = new ArrayList<T>();

		Node cursor = head;

		while (cursor != null) {
			list.add(cursor.data);
			// if(cursor.link.link != null)
			// list.add(cursor.link.link.member);

			cursor = cursor.link;
			if (cursor != null)
				cursor = cursor.link;
		}

		return list;
	}

	public int getSize() {
		return numItems;
	}

	public String toString() {
		String str = "";
		Node cursor = head;

		while (cursor != null) {
			str += cursor.data.toString() + "\n";
			cursor = cursor.link;
		}

		return str;
	}

	class Node {
		T data;
		Node link;

		public Node(T data, Node link) {
			this.data = data;
			this.link = link;
		}

		public void setLink(Node link) {
			this.link = link;
		}

		public void setData(T data) {
			this.data = data;
		}
	}
}
